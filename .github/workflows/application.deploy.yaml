name: Deploy Affected Applications

on:
  push:
    branches: [main]

jobs:
  deploy_applications:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm ci

      - name: Install doppler
        run: (curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh || wget -t 3 -qO- https://cli.doppler.com/install.sh) | sudo sh -s -- --verify-signature

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Deploy Development
        env:
          DOPPLER_ACCESS_TOKEN_DEV: ${{ secrets.DOPPLER_ACCESS_TOKEN_DEV }}
        run: npx nx affected --target=deploy-development --parallel --max-parallel=2

      - name: E2E Development
        env:
          DOPPLER_ACCESS_TOKEN_DEV: ${{ secrets.DOPPLER_ACCESS_TOKEN_DEV }}
        run: npx nx affected --target=e2e-ci --parallel --max-parallel=2

      - name: Deploy Staging
        env:
          DOPPLER_ACCESS_TOKEN_STAGE: ${{ secrets.DOPPLER_ACCESS_TOKEN_STAGE }}
        run: npx nx affected --target=deploy-staging --parallel --max-parallel=2

      - name: Deploy Production
        env:
          DOPPLER_ACCESS_TOKEN_PROD: ${{ secrets.DOPPLER_ACCESS_TOKEN_PROD }}
        run: npx nx affected --target=deploy-production --parallel --max-parallel=2
